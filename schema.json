{
  "openapi": "3.0.0",
  "info": {
    "title": "ORI",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://generic-ori.com"
    }
  ],
  "paths": {
    "/tasks": {
      "post": {
        "summary": "Creates new task",
        "operationId": "createTask",
        "requestBody": {
          "description": "Contains task parameters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response containing selected data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResult"
                }
              }
            }
          },
          "201": {
            "description": "Successful response containing registered task id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskId": {
                      "$ref": "#/components/schemas/TaskId"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskId"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Returns registred task status array",
        "operationId": "getTasks",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "summary": "Returns task status",
        "operationId": "getTask",
        "responses": {
          "200": {
            "description": "Successful response containing task status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes task",
        "operationId": "deleteTask",
        "responses": {
          "204": {
            "description": "Successful response"
          }
        }
      },
      "parameters": [
        {
          "name": "taskId",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/TaskId"
          }
        }
      ]
    },
    "/tasks/{taskId}/result": {
      "get": {
        "summary": "Returns prepared result",
        "operationId": "getTaskResult",
        "responses": {
          "200": {
            "description": "Successful response containing prepared result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "taskId",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/TaskId"
          }
        },
        {
          "name": "from",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "description": "First record to return"
        },
        {
          "name": "to",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "description": "Last record to return"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "TaskStatus": {
        "type": "object",
        "properties": {
          "taskId": {
            "$ref": "#/components/schemas/TaskId"
          },
          "ready": {
            "type": "boolean"
          },
          "result": {
            "$ref": "#/components/schemas/TaskStatusResult"
          }
        },
        "required": [
          "taskId",
          "ready"
        ]
      },
      "TaskStatusResult": {
        "type": "object",
        "properties": {
          "successful": {
            "type": "boolean"
          }
        },
        "discriminator": {
          "propertyName": "successful",
          "mapping": {
            "true": "TaskStatusResultOk",
            "false": "TaskStatusResultError"
          }
        },
        "required": [
          "successful"
        ]
      },
      "TaskStatusResultOk": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskStatusResult"
          },
          {
            "type": "object",
            "properties": {
              "taskResult": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusResultOkStatisticRecords"
                  },
                  {
                    "$ref": "#/components/schemas/TaskStatusResultOkContentFile"
                  }
                ]
              }
            },
            "required": [
              "taskResult"
            ]
          }
        ]
      },
      "TaskStatusResultOkStatisticRecords": {
        "type": "object",
        "properties": {
          "records": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "records"
        ]
      },
      "TaskStatusResultOkContentFile": {
        "description": "Prepared file size in bytes",
        "type": "object",
        "properties": {
          "bytes": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "bytes"
        ]
      },
      "TaskStatusResultError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskStatusResult"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "minLength": 1,
                "maxLength": 256
              }
            },
            "required": [
              "message"
            ]
          }
        ]
      },
      "TaskParameters": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/StatisticParameters"
          },
          {
            "$ref": "#/components/schemas/ContentParameters"
          }
        ],
        "discriminator": {
          "propertyName": "requestType",
          "mapping": {
            "statistic": "#/components/schemas/StatisticParameters",
            "content": "#/components/schemas/ContentParameters"
          }
        }
      },
      "StatisticParameters": {
        "type": "object",
        "properties": {
          "requestType": {
            "type": "string"
          },
          "telcoIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelcoId"
            }
          },
          "findRange": {
            "type": "object",
            "properties": {
              "begin": {
                "$ref": "#/components/schemas/DateTime"
              },
              "end": {
                "$ref": "#/components/schemas/DateTime"
              }
            },
            "required": [
              "begin",
              "end"
            ]
          },
          "taskType": {
            "type": "string",
            "enum": [
              "abonents",
              "connections",
              "aaa",
              "links",
              "certs",
              "keys"
            ]
          },
          "parameters": {
            "$ref": "#/components/schemas/StatisticParameter"
          }
        },
        "required": [
          "requestType",
          "taskType",
          "parameters"
        ]
      },
      "StatisticParameter": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/LogicalNot"
          },
          {
            "$ref": "#/components/schemas/LogicalAnd"
          },
          {
            "$ref": "#/components/schemas/LogicalOr"
          },
          {
            "$ref": "#/components/schemas/SimpleParameter"
          }
        ]
      },
      "LogicalNot": {
        "type": "object",
        "properties": {
          "not": {
            "$ref": "#/components/schemas/StatisticParameter"
          }
        },
        "required": [
          "not"
        ]
      },
      "LogicalAnd": {
        "type": "object",
        "properties": {
          "and": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticParameter"
            }
          }
        },
        "required": [
          "and"
        ]
      },
      "LogicalOr": {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticParameter"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      "SimpleParameter": {
        "type": "object",
        "properties": {
          "valueType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RequestAbonentsValueType"
              },
              {
                "$ref": "#/components/schemas/RequestConnectionsValueType"
              },
              {
                "$ref": "#/components/schemas/RequestAaaValueType"
              },
              {
                "$ref": "#/components/schemas/RequestLinksValueType"
              },
              {
                "$ref": "#/components/schemas/RequestCertsValueType"
              },
              {
                "$ref": "#/components/schemas/RequestKeysValueType"
              }
            ]
          }
        },
        "discriminator": {
          "propertyName": "valueType"
        },
        "required": [
          "valueType"
        ]
      },
      "RequestAbonentsValueType": {
        "type": "string",
        "enum": [
          "userId",
          "nickName",
          "givenName",
          "initialName",
          "familyName",
          "address",
          "passport",
          "relatives",
          "msisdn",
          "email",
          "imId",
          "contract"
        ]
      },
      "RequestConnectionsValueType": {
        "type": "string",
        "enum": [
          "serviceId",
          "abonentId",
          "abonentIpPort",
          "abonentMsisdn",
          "abonentEmail",
          "abonentProgramm",
          "abonentMsisdn",
          "abonentLocation",
          "contactId",
          "resourceName",
          "eventId",
          "ownerId",
          "text",
          "paymentId",
          "paymentInfo"
        ]
      },
      "RequestAaaValueType": {
        "type": "string",
        "enum": [
          "serviceId",
          "userId",
          "userIpPort",
          "userMsisdn",
          "userEmail",
          "userProgramm",
          "userMiscInfo",
          "userLocation",
          "eventId"
        ]
      },
      "RequestLinksValueType": {
        "type": "string",
        "enum": [
          "userIdA",
          "userIdB",
          "resourceName"
        ]
      },
      "RequestCertsValueType": {
        "type": "string",
        "enum": [
          "client",
          "server"
        ]
      },
      "RequestKeysValueType": {
        "type": "string",
        "enum": [
          "client",
          "server",
          "asServer",
          "asClient",
          "sni",
          "userId",
          "userLogin",
          "clientRegion",
          "serverRegion",
          "serviceName"
        ]
      },
      "RequestAbonents": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleParameter"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserId"
                  },
                  {
                    "$ref": "#/components/schemas/NickName"
                  },
                  {
                    "$ref": "#/components/schemas/GivenName"
                  },
                  {
                    "$ref": "#/components/schemas/InitialName"
                  },
                  {
                    "$ref": "#/components/schemas/FamilyName"
                  },
                  {
                    "$ref": "#/components/schemas/AddressData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportData"
                  },
                  {
                    "$ref": "#/components/schemas/Msisdn"
                  },
                  {
                    "$ref": "#/components/schemas/Email"
                  },
                  {
                    "$ref": "#/components/schemas/ImId"
                  },
                  {
                    "$ref": "#/components/schemas/Contract"
                  }
                ]
              }
            },
            "required": [
              "value"
            ]
          }
        ]
      },
      "RequestConnections": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleParameter"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ServiceId"
                  },
                  {
                    "$ref": "#/components/schemas/UserId"
                  },
                  {
                    "$ref": "#/components/schemas/IpPort"
                  },
                  {
                    "$ref": "#/components/schemas/Msisdn"
                  },
                  {
                    "$ref": "#/components/schemas/Email"
                  },
                  {
                    "$ref": "#/components/schemas/Programm"
                  },
                  {
                    "$ref": "#/components/schemas/MiscInfo"
                  },
                  {
                    "$ref": "#/components/schemas/Location"
                  },
                  {
                    "$ref": "#/components/schemas/ResourceName"
                  },
                  {
                    "$ref": "#/components/schemas/EventId"
                  },
                  {
                    "$ref": "#/components/schemas/String"
                  },
                  {
                    "$ref": "#/components/schemas/PaymentId"
                  },
                  {
                    "$ref": "#/components/schemas/PaymentInfo"
                  }
                ]
              }
            },
            "required": [
              "value"
            ]
          }
        ]
      },
      "RequestAaa": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleParameter"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ServiceId"
                  },
                  {
                    "$ref": "#/components/schemas/UserId"
                  },
                  {
                    "$ref": "#/components/schemas/IpPort"
                  },
                  {
                    "$ref": "#/components/schemas/Msisdn"
                  },
                  {
                    "$ref": "#/components/schemas/Email"
                  },
                  {
                    "$ref": "#/components/schemas/Programm"
                  },
                  {
                    "$ref": "#/components/schemas/MiscInfo"
                  },
                  {
                    "$ref": "#/components/schemas/Location"
                  },
                  {
                    "$ref": "#/components/schemas/EventId"
                  }
                ]
              }
            },
            "required": [
              "value"
            ]
          }
        ]
      },
      "RequestLinks": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleParameter"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserId"
                  },
                  {
                    "$ref": "#/components/schemas/ResourceName"
                  }
                ]
              }
            },
            "required": [
              "value"
            ]
          }
        ]
      },
      "RequestCerts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleParameter"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/IpPort"
              }
            },
            "required": [
              "value"
            ]
          }
        ]
      },
      "RequestKeys": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleParameter"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IpPort"
                  },
                  {
                    "$ref": "#/components/schemas/Integer"
                  },
                  {
                    "$ref": "#/components/schemas/Sni"
                  },
                  {
                    "$ref": "#/components/schemas/UserId"
                  },
                  {
                    "$ref": "#/components/schemas/UserLogin"
                  },
                  {
                    "$ref": "#/components/schemas/Region"
                  },
                  {
                    "$ref": "#/components/schemas/ServiceName"
                  }
                ]
              }
            },
            "required": [
              "value"
            ]
          }
        ]
      },
      "ContentParameters": {
        "type": "object",
        "properties": {
          "requestType": {
            "type": "string"
          },
          "telcoIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelcoId"
            }
          },
          "parameters": {
            "type": "object",
            "properties": {
              "streamId": {
                "$ref": "#/components/schemas/StreamId"
              },
              "beginOffset": {
                "type": "integer"
              },
              "endOffset": {
                "type": "integer"
              }
            },
            "required": [
              "streamId"
            ]
          }
        },
        "required": [
          "requestType",
          "parameters"
        ]
      },
      "TaskResult": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RecordAbonent"
            },
            {
              "$ref": "#/components/schemas/RecordConnection"
            },
            {
              "$ref": "#/components/schemas/RecordAaa"
            },
            {
              "$ref": "#/components/schemas/RecordLink"
            },
            {
              "$ref": "#/components/schemas/RecordCert"
            },
            {
              "$ref": "#/components/schemas/RecordKey"
            }
          ]
        }
      },
      "RecordAbonent": {
        "type": "object",
        "properties": {
          "telcoId": {
            "$ref": "#/components/schemas/TelcoId"
          },
          "userIdentifier": {
            "$ref": "#/components/schemas/UserIdentifier"
          },
          "userRegistered": {
            "$ref": "#/components/schemas/DateTime"
          },
          "nickName": {
            "$ref": "#/components/schemas/NickName"
          },
          "birthDate": {
            "$ref": "#/components/schemas/Date"
          },
          "address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressData"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 1024
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NameData"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 1024
              }
            ]
          },
          "passport": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PassportData"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 1024
              }
            ]
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64
            }
          },
          "msisdn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Msisdn"
            }
          },
          "relatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserId"
            }
          },
          "email": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "imIdentifier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImIdentifier"
            }
          },
          "userUpdatedDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "userUnregisteredDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "contractRegisteredDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "additional": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "description": "наименование о дополнительных сведениях",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                },
                "content": {
                  "description": "содержание дополнительных сведений",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 4096
                }
              },
              "required": [
                "title",
                "content"
              ]
            }
          }
        },
        "required": [
          "telcoId",
          "userIdentifier",
          "userRegistered"
        ]
      },
      "RecordConnection": {
        "type": "object",
        "properties": {
          "telcoId": {
            "$ref": "#/components/schemas/TelcoId"
          },
          "arrivedDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "connectionDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "serviceId": {
            "$ref": "#/components/schemas/ServiceId"
          },
          "abonent": {
            "$ref": "#/components/schemas/UserIdentifier"
          },
          "abonentIpPort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IpPort"
            }
          },
          "abonentMsisdn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Msisdn"
            }
          },
          "abonentEmail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "abonentProgramm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Programm"
            }
          },
          "abonentMiscInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MiscInfo"
            }
          },
          "eventId": {
            "$ref": "#/components/schemas/EventId"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserIdentifier"
            }
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "resourceIdentifier": {
            "$ref": "#/components/schemas/ResourceIdentifier"
          },
          "resourceMetadata": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "description": "техническая информация о файловых данных",
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 256
                    },
                    "filesize": {
                      "$ref": "#/components/schemas/Integer"
                    }
                  },
                  "required": [
                    "filename",
                    "filesize"
                  ]
                }
              },
              {
                "description": "техническая информация о потоковых данных",
                "type": "object",
                "properties": {
                  "timestamp": {
                    "$ref": "#/components/schemas/DateTime"
                  },
                  "duration": {
                    "$ref": "#/components/schemas/Integer"
                  },
                  "startOffset": {
                    "$ref": "#/components/schemas/Integer"
                  },
                  "StopOffset": {
                    "$ref": "#/components/schemas/Integer"
                  }
                }
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserIdentifier"
          },
          "text": {
            "$ref": "#/components/schemas/String"
          },
          "payment": {
            "$ref": "#/components/schemas/PaymentData"
          },
          "streamId": {
            "$ref": "#/components/schemas/StreamId"
          }
        },
        "required": [
          "telcoId",
          "arrivedDT",
          "connectionDT",
          "serviceId",
          "abonent",
          "eventId",
          "contacts"
        ]
      },
      "RecordAaa": {
        "type": "object",
        "properties": {
          "telcoId": {
            "$ref": "#/components/schemas/TelcoId"
          },
          "arrivedDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "connectionDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "serviceId": {
            "$ref": "#/components/schemas/ServiceId"
          },
          "abonent": {
            "$ref": "#/components/schemas/UserIdentifier"
          },
          "abonentIpPort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IpPort"
            }
          },
          "abonentMsisdn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Msisdn"
            }
          },
          "abonentEmail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "abonentProgramm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Programm"
            }
          },
          "abonentMiscInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MiscInfo"
            }
          },
          "eventId": {
            "$ref": "#/components/schemas/EventId"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "required": [
          "telcoId",
          "arrivedDT",
          "connectionDT",
          "serviceId",
          "abonent",
          "eventId"
        ]
      },
      "RecordLink": {
        "type": "object",
        "properties": {
          "telcoId": {
            "$ref": "#/components/schemas/TelcoId"
          },
          "arrivedDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "connectionDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "serviceId": {
            "$ref": "#/components/schemas/ServiceId"
          },
          "abonent": {
            "$ref": "#/components/schemas/UserIdentifier"
          },
          "eventId": {
            "$ref": "#/components/schemas/EventId"
          },
          "linked": {
            "$ref": "#/components/schemas/LinkedIdentifier"
          }
        },
        "required": [
          "telcoId",
          "arrivedDT",
          "connectionDT",
          "serviceId",
          "abonent",
          "eventId",
          "linked"
        ]
      },
      "RecordCert": {
        "type": "object",
        "properties": {
          "telcoId": {
            "$ref": "#/components/schemas/TelcoId"
          },
          "arrivedDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "fromDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "toDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "client": {
            "$ref": "#/components/schemas/IpPort"
          },
          "server": {
            "$ref": "#/components/schemas/IpPort"
          },
          "clientRandom": {
            "$ref": "#/components/schemas/OctetString"
          },
          "preMasterKey": {
            "$ref": "#/components/schemas/OctetString"
          },
          "serverRandom": {
            "$ref": "#/components/schemas/OctetString"
          }
        },
        "required": [
          "telcoId",
          "arrivedDT",
          "fromDT",
          "client",
          "server",
          "clientRandom",
          "preMasterKey"
        ]
      },
      "RecordKey": {
        "type": "object",
        "properties": {
          "telcoId": {
            "$ref": "#/components/schemas/TelcoId"
          },
          "arrivedDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "fromDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "toDT": {
            "$ref": "#/components/schemas/DateTime"
          },
          "client": {
            "$ref": "#/components/schemas/IpPort"
          },
          "server": {
            "$ref": "#/components/schemas/IpPort"
          },
          "asClient": {
            "$ref": "#/components/schemas/Integer"
          },
          "asServer": {
            "$ref": "#/components/schemas/Integer"
          },
          "clientRandom": {
            "$ref": "#/components/schemas/OctetString"
          },
          "preMasterKey": {
            "$ref": "#/components/schemas/OctetString"
          },
          "serverRandom": {
            "$ref": "#/components/schemas/OctetString"
          },
          "sni": {
            "$ref": "#/components/schemas/Sni"
          },
          "userId": {
            "$ref": "#/components/schemas/UserId"
          },
          "userLogin": {
            "$ref": "#/components/schemas/UserLogin"
          },
          "keyExchange": {
            "$ref": "#/components/schemas/KeyExchange"
          },
          "chipherSuite": {
            "$ref": "#/components/schemas/Integer"
          },
          "clientRegion": {
            "$ref": "#/components/schemas/Region"
          },
          "serverRegion": {
            "$ref": "#/components/schemas/Region"
          },
          "serviceName": {
            "$ref": "#/components/schemas/ServiceName"
          }
        },
        "required": [
          "telcoId",
          "arrivedDT",
          "fromDT",
          "client",
          "server",
          "clientRandom",
          "preMasterKey"
        ]
      },
      "TaskId": {
        "description": "идентификатор задачи",
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "TelcoId": {
        "description": "филиал ОРИ, обслуживаемый ТС ОРМ (расшифровывается по справочнику)",
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      },
      "ServiceId": {
        "description": "идентификатор сервиса (расшифровывается по справочнику)",
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      },
      "UserIdentifier": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/UserId"
          },
          "userType": {
            "description": "тип пользователя (расшифровывается по справочнику)",
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          }
        },
        "required": [
          "userId",
          "userType"
        ]
      },
      "UserId": {
        "description": "идентификатор пользователя",
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "ResourceIdentifier": {
        "type": "object",
        "properties": {
          "resourceName": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "resourceType": {
            "description": "тип ресурса (расшифровывается по справочнику)",
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          }
        },
        "required": [
          "resourceName"
        ]
      },
      "ResourceName": {
        "description": "наименование ресурса",
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      },
      "LinkedIdentifier": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserIdentifier"
          },
          "resource": {
            "$ref": "#/components/schemas/ResourceIdentifier"
          }
        },
        "required": [
          "user",
          "resource"
        ]
      },
      "NickName": {
        "description": "псевдоним пользователя",
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "NameData": {
        "type": "object",
        "properties": {
          "given": {
            "$ref": "#/components/schemas/GivenName"
          },
          "initial": {
            "$ref": "#/components/schemas/InitialName"
          },
          "family": {
            "$ref": "#/components/schemas/FamilyName"
          }
        }
      },
      "GivenName": {
        "description": "имя",
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "InitialName": {
        "description": "отчество",
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "FamilyName": {
        "description": "фамилия",
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "AddressData": {
        "type": "object",
        "properties": {
          "country": {
            "description": "страна",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "region": {
            "description": "область",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "city": {
            "description": "город, поселок, деревня, населенный пункт",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "street": {
            "description": "улица",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "building": {
            "description": "дом, строение",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "apartment": {
            "description": "квартира, офис",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          }
        }
      },
      "PassportData": {
        "type": "object",
        "properties": {
          "serial": {
            "description": "серия",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
          },
          "number": {
            "description": "номер",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
          }
        }
      },
      "IpPort": {
        "type": "object",
        "properties": {
          "address": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ]
          },
          "port": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          }
        }
      },
      "Msisdn": {
        "description": "номер телефона",
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "Email": {
        "description": "электронный адрес почты",
        "type": "string",
        "format": "email",
        "minLength": 1,
        "maxLength": 256
      },
      "ImIdentifier": {
        "type": "object",
        "properties": {
          "imId": {
            "$ref": "#/components/schemas/ImId"
          },
          "imName": {
            "description": "наименование мессанджера",
            "type": "string"
          }
        }
      },
      "ImId": {
        "description": "идентификатор пользователя в мессанджере",
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "Programm": {
        "description": "нименование программы-клиента",
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "MiscInfo": {
        "description": "прочая информация",
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "Contract": {
        "description": "номер договора",
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "Location": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/MobileLocation"
          },
          {
            "$ref": "#/components/schemas/GeoLocation"
          },
          {
            "description": "неструктурированное описание местоположения",
            "type": "string",
            "minLength": 1,
            "maxLength": 4096
          }
        ]
      },
      "MobileLocation": {
        "type": "object",
        "properties": {
          "mcc": {
            "description": "код страны оператора связи",
            "type": "string",
            "minLength": 1,
            "maxLength": 4
          },
          "mnc": {
            "description": "код оператора связи",
            "type": "string",
            "minLength": 1,
            "maxLength": 3
          },
          "lac": {
            "description": "LAC оператора связи",
            "type": "integer",
            "minLength": 1,
            "maxLength": 65535
          },
          "cell": {
            "description": "CELL оператора связи",
            "type": "integer",
            "minLength": 1,
            "maxLength": 4294967295
          },
          "operator": {
            "description": "наименование оператора связи",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          }
        }
      },
      "GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "description": "широта",
            "type": "number"
          },
          "longitude": {
            "description": "долгота",
            "type": "number"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "EventId": {
        "description": "тип события (расшифровывается по справочнику)",
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      },
      "PaymentData": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PaymentId"
          },
          "serviceId": {
            "description": "идентификатор платежного сервиса (расшифровывается по справочнику)",
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          },
          "info": {
            "$ref": "#/components/schemas/PaymentInfo"
          }
        },
        "required": [
          "id",
          "serviceId"
        ]
      },
      "PaymentId": {
        "description": "идентификатор транзакции, счета, кошелька и т.д.",
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "PaymentInfo": {
        "description": "дополнительная информация",
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      },
      "Sni": {
        "description": "server name indication",
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "UserLogin": {
        "description": "пользовательский логин",
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "KeyExchange": {
        "description": "метод обмена ключами",
        "type": "string",
        "minLength": 1,
        "maxLength": 16
      },
      "Region": {
        "description": "наименование региона",
        "type": "string",
        "minLength": 1,
        "maxLength": 10
      },
      "ServiceName": {
        "description": "имя сервиса",
        "type": "string",
        "minLength": 1,
        "maxLength": 16
      },
      "StreamId": {
        "description": "идентификатор содержимого",
        "type": "string",
        "pattern": "^[[:xdigit:]]{16,16}$"
      },
      "Integer": {
        "type": "integer"
      },
      "String": {
        "type": "string"
      },
      "Date": {
        "type": "string",
        "format": "date"
      },
      "DateTime": {
        "type": "string",
        "format": "date-time"
      },
      "OctetString": {
        "type": "string",
        "pattern": "^[[:xdigit:]]+$"
      }
    }
  }
}